plugins {
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.8'
    id "org.flywaydb.flyway" version "6.4.2" // Flyway plugin!
    id 'checkstyle'
    id 'java'
}

group = 'com.ponomarev'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

// -------------------------------------------- Integration test block start --------------------------------------------
// Create folder "test-it" before build

sourceSets {
    integrationTest {
        java.srcDir "$projectDir/src/test-it/java"
        resources.srcDir "$projectDir/src/test-it/resources"
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

configurations {
    integrationTestCompile.extendsFrom testImplementation
    integrationTestRuntime.extendsFrom testRuntime
}

task integrationTest(type: Test) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

check.dependsOn integrationTest

// -------------------------------------------- Integration test block finish -------------------------------------------

// -------------------------------------------- Checkstyle block start --------------------------------------------------

checkstyle {
    toolVersion = '8.29'
    maxWarnings = 0
    configFile = file("$projectDir/ci-flow/checkstyle.xml")
    showViolations = true
    ignoreFailures = false
}

// -------------------------------------------- Checkstyle block finish -------------------------------------------

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    runtimeOnly 'mysql:mysql-connector-java'

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    integrationTestCompile 'org.springframework.boot:spring-boot-starter-test'
    integrationTestRuntime 'mysql:mysql-connector-java'
}

// ------------------------------------------- Flyway block start --------------------------------------------

flyway {
    url = "$System.env.DB_URL"
    user = "$System.env.DB_USERNAME"
    password = "$System.env.DB_PASSWORD"
    schemas = ['jenkins_pr']
    baselineOnMigrate = true
    if(System.properties['PROFILE'] != "prod") {
        locations = ["filesystem:ci-flow/db/migration"]
    } else {
        locations = ["filesystem:ci-flow/db/migration/schema"]
    }
    placeholders = [
            'useUnicode'    : 'true',
            'serverTimezone': 'UTC'
    ]
}

// ------------------------------------------- Flyway block finish -------------------------------------------

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}
